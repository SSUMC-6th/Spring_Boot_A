Keyword: listen() 시스템 콜

### listen(**sockfd, backlog**);

> **서버 소켓을 대기 상태로 전환하여 클라이언트의 연결을 수락할 수 있도록 하는 시스템 콜**
1. 파라미터로 받은 파일 디스크립터(sockfd), 즉 이 서버 소켓을 클라이언트의 요청을 받아들일 소켓으로 설정함
2. 이 서버 소켓이 클라이언트 소켓을 최대로 받아주는 크기를 backlog로 설정

**→ 연결지향인 TCP에서만 사용**
리턴 값: X (int 0)
> 

<aside>
💡 서버에서만 호출

</aside>

### listen() 파라미터 → sockfd

- 파라미터로 받은 **서버 소켓**(파일 디스크립터(`sockfd`) 에 해당)
    
    → socket() 함수를 통해 생성된 서버 소켓의 식별자
    
    → 이는 클라이언트의 연결 요청을 받아들일 소켓
    
- 파라미터로 받은 파일 디스크립터(sockfd) 에 해당하는 이 소켓에게
    
    **클라이언트의 연결 요청을 받아들이도록 부여함**
    

### listen() 파라미터 → backlog

- **파라미터로 받은 backlog 크기만큼,
서버 소켓이 클라이언트의 연결 요청을 대기하는 backlog queue를 만듦

backlog → 소켓을 최대로 받아주는 큐의 최대 크기**
- 이 backlog queue에는 연결 요청을 대기하는 클라이언트 소켓이 들어감
- 큐에서 대기 중인 연결 요청 호출 → 이건 accpet() 시스템 콜이 처리

1. 서버 측의 소켓은 `listen()`이후 대기 상태에서 클라이언트의 연결 요청을 받아주기 위해
**backlog queue**를 가진 채로 기다리게 됨
2. 실제로는 서버에 셀 수 없이 많은 클라이언트가 요청을 보내게 되고 이 요청들은 모두 backlog queue에 저장됨

**** client가 클라이언트 소켓을 통해 처음으로 서버에 요청을 하여
백로그 큐에 들어갈 때 *syn* 요청을 보내게 된다**

<aside>
💡 이 시스템 콜은 클라이언트 소켓이 아니라 서버 소켓에 적용되는 설정이며,
이 설정을 통해 서버가 너무 많은 연결 요청을 받지 않도록 함

</aside>