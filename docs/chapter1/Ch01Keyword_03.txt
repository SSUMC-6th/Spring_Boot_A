Keyword: 시스템 콜

> 운영 체제의 커널이 제공하는 서비스에 대해, 
응용 프로그램의 요청에 따라 커널에 접근하기 위한 인터페이스

ex) 사용자 프로그램이 디스크 파일에 접근해야 할 경우,
운영체제에게 특권 명령의 대행을 요청하는 것
> 

### 시스템 콜을 호출한다면

1. 각 시스템 콜에는 번호가 할당되고 시스템 콜 인터페이스는 **시스템 콜 번호와 시스템 콜 핸들러 함수 주소로 구성되는 시스템 콜 테이블**을 유지한다.
2. 운영체제는 자신의 커널 영역에서 해당 인덱스가 가리키는 주소에 저장되어 있는 루틴을 수행한다.
3. 작업이 완료되면 CPU에게 인터럽트를 발생시켜 수행이 완료 되었음을 알린다.

<aside>
💡 만약 시스템 콜이 발생했을 때 OS로 전달할 추가적인 정보가 필요할 경우

정보가 담긴 매개변수들을 메모리에 저장해 그 메모리의 주소를 레지스터에 전달하거나, 프로그램에 의해 스택에 전달된다.

</aside>

### 시스템 콜 종류

프로세스/스레드 관련 (생성 또는 kill)

파일 I/O 관련 (읽기, 쓰기, 읽었는지 확인..)

소켓 관련 (네트워크 관련 작업)

장치 관련 (키보드 입력 등)

프로세스 통신 관련

### 시스템 콜이 필요한 이유

- 일반적으로 사용하는 ‘응용 프로그램’ → 유저 레벨의 프로그램
- 유저 레벨의 함수들만으로는 많은 기능을 구현하기 힘들어서, `커널`의 도움을 받아야 함
- 이 작업은 유저 모드(=유저 프로세스, 즉 응용프로그램) 에서는 수행할 수 없고,
    
    반드시 **커널에 관련된 것은 커널 모드로 전환한 후에야** 해당 작업을 수행할 권한이 생긴다.


| 유저 모드 : PC register 가 사용자 프로그램이 올라가 있는 메모리 위치를 가리키고 있을 때 → CPU가 유저 모드에서 수행중 |
| 커널 모드 : PC register 가 운영체제가 존재하는 부분을 가리키고 있다면 → 운영체제의 코드 수행중,  CPU가 커널모드에서 수행중 |


모드 비트 : CPU 내에 모드 비트를 두어서 구분
일반 명령: 1, 특권 명령: 0


| 일반 명령(유저 모드) :  메모리에서 자료를 읽어와서 CPU에서 계산하고 결과를 메모리의 쓰는 일련의 명령들 → 모든 프로그램이 수행 가능
| 특권 명령 (커널 모드) : 보안이 필요한 명령, 입출력 장치, 타이머 등 각종 장치에 접근하는 명령